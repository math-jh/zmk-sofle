#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro
#define SN(keycode) &sn LS(LG(LC(keycode))) keycode     // Autosnippet Macro
#define REP(keycode) &repeat keycode
#define MA(keycode) &sn LS(LG(LC(keycode))) REP(keycode)

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    NavScr: NavScr {
        compatible = "zmk,behavior-tap-dance";
        label = "NAVSCR";
        #binding-cells = <0>;
        tapping-term-ms = <500>;
        bindings = <&tog 2>, <&tog 3>;
    };

    UnivTog: UnivTog {
        compatible = "zmk,behavior-tap-dance";
        label = "UnivTog";
        #binding-cells = <0>;
        bindings = <&sk LS(LG(LCTRL))>, <&kp LC(LG(LS(RBKT)))>;
        tapping-term-ms = <500>;
    };

    tdq: TDQ {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_Q";
        #binding-cells = <0>;
        tapping-term-ms = <500>;
        bindings = <AS(Q)>, <MA(Q)>;
    };

    macros {
        repeat: repeat_macro {
            compatible = "zmk,behavior-macro-one-param";
            label = "REPEAT";
            #binding-cells = <1>;
            bindings = <
                &macro_param_1to1 &kp MACRO_PLACEHOLDER
                &macro_param_1to1 &kp MACRO_PLACEHOLDER
            >;
        };
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <500>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };


        sn: auto_snippet {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <700>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&gresc      AS(N1)   AS(N2)        AS(N3)        AS(N4)     AS(N5)      &kp UP_ARROW     AS(N6)  AS(N7)       AS(N8)     AS(N9)    AS(N0)    &kp BACKSPACE
&kp TAB     SN(Q)    SN(W)         SN(E)         SN(R)      SN(T)       &kp DOWN_ARROW   SN(Y)   SN(U)        SN(I)      SN(O)     SN(P)     &kp BACKSLASH
&kp RCMD    SN(A)    SN(S)         SN(D)         SN(F)      SN(G)       &kp LEFT_ARROW   SN(H)   SN(J)        SN(K)      SN(L)     SN(SEMI)  SN(APOS)
&kp LSHFT   SN(Z)    SN(X)         SN(C)         SN(V)      SN(B)       &kp RIGHT_ARROW  SN(N)   SN(M)        SN(COMMA)  SN(DOT)   SN(FSLH)  &lt 1 LBKT
&kp C_MUTE  &NavScr  &kp LEFT_ALT  &kp LEFT_GUI  SN(SPACE)  &kp LALT    &kp ENTER        &UnivTog  SN(ENTER)  &kp LCTRL  &kp RALT  &kp RCMD
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        Function {
            bindings = <
&kp GRAVE     &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LC(UP_ARROW)   &kp LG(SPACE)    &kp LG(R)  &trans  &kp C_PREVIOUS     &kp C_PP           &kp C_NEXT  SN(MINUS)  SN(EQUAL)  &kp DELETE
&out OUT_TOG  &bt BT_NXT            &bt BT_CLR            &rgb_ug RGB_BRI    &rgb_ug RGB_SPI  &trans     &trans  &trans             &trans             &trans      SN(LBKT)   SN(RBKT)   &trans
&kp CAPSLOCK  &rgb_ug RGB_TOG       &rgb_ug RGB_EFF       &rgb_ug RGB_BRD    &rgb_ug RGB_SPD  &trans     &trans  &trans             &kp LC(LG(LA(J)))  &trans      &trans     &trans     &trans
&kp LSHFT     &trans                &trans                &kp LC(LG(LA(C)))  &trans           &trans     &trans  &kp LC(LG(LA(N)))  &trans             &trans      &trans     &trans     &trans
&kp C_MUTE    &trans                &trans                &trans             &trans           &trans     &trans  &trans             &trans             &trans      &trans     &trans
            >;

            display-name = "Fn";
            sensor-bindings = <&scroll_encoder>;
        };

        Navigation {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &mmv MOVE_UP     &trans  &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &mmv MOVE_DOWN   &trans  &mkp LCLK  &mkp RCLK  &trans  &trans  &kp PG_UP
&trans  &trans  &trans  &trans  &trans  &trans  &mmv MOVE_LEFT   &trans  &trans     &trans     &trans  &trans  &kp PG_DN
&trans  &trans  &trans  &trans  &trans  &trans  &mmv MOVE_RIGHT  &trans  &trans     &trans     &trans  &trans  &trans
&trans  &tog 2  &trans  &trans  &trans  &trans  &trans           &trans  &mkp RCLK  &trans     &trans  &trans
            >;

            label = "Nav";
            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        Scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &msc SCRL_DOWN   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &msc SCRL_UP     &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &msc SCRL_LEFT   &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &msc SCRL_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &tog 3  &trans  &trans  &trans  &trans  &trans           &trans  &trans  &trans  &trans  &trans
            >;

            label = "Scroll";
        };
    };
};
